from hw import *
from hw.hv import *
from hwx.xmlui import gui
from hwx import gui as gui2
import os


def MyCustomGui():

    def onClose(event):
        dialog.Hide()

    def onRun(event):
        dialog.Hide()
        gui2.tellUser("Done!")

    def onModified():
        output.value = str(f"Output Quality: {slider.value}")

    def comboboxFunc(event):
        # output.text = event.value
        pass

    label1 = gui.Label(text="Model File")
    modelFile = gui.OpenFileEntry(placeholdertext="Model File")
    label2 = gui.Label(text="Result File")
    resultFile = gui.OpenFileEntry(placeholdertext="Result File")
    label3 = gui.Label(text="Screenshot Folder")
    folderSel = gui.ChooseDirEntry(tooltip="Select output directory")
    slider = gui2.Slider(maxvalue=100, tracking=False, value=10, command=onModified)
    output = gui2.Label(f"Output Quality: {slider.value}")
    formats = (("jpeg", "JPEG"), ("png", "PNG"))
    buttons = gui2.HRadioButtons(formats)
    levels = (("lvl1", "Level 1"), ("lvl2", "Level 2"), ("lvl3", "Level 3"))
    combobox = gui2.ComboBox(levels, command=comboboxFunc)

    close = gui.Button("Close", command=onClose)
    create = gui.Button("Run", command=onRun)

    mainFrame = gui.VFrame(
        (label1, 10, modelFile),
        (label2, 10, resultFile),
        (label3, 10, folderSel),
        (output, 10, slider),
        (buttons, "<->"),
        (combobox, "<->"),
        (create, close),
    )

    dialog = gui.Dialog(caption="Example Dialog")
    dialog.recess().add(mainFrame)
    dialog.setButtonVisibile("ok", False)
    dialog.setButtonVisibile("cancel", False)
    dialog.show(width=400, height=100)

MyCustomGui()